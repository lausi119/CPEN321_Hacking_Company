// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot logs in with test user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot renders the login screen 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
