// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot logs in with test user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to CalTab 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CalTab />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 65,
            }
          }
        >
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
            style={
              Object {
                "height": "100%",
                "margin": 25,
                "padding": 0,
              }
            }
          >
            <Icon
              allowFontScaling={false}
              name="ios-cloud-upload"
              size={30}
            />
          </TouchableOpacity>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "marginTop": 15,
                "padding": 10,
                "textAlign": "center",
              }
            }
          >
            Calendar
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            backgroundColor="green"
            onPress={[Function]}
            style={
              Object {
                "height": "100%",
                "margin": 25,
                "padding": 0,
              }
            }
          >
            <Icon
              allowFontScaling={false}
              name="ios-add-circle-outline"
              size={30}
            />
          </TouchableOpacity>
        </Component>,
        <Component
          style={
            Object {
              "height": 600,
            }
          }
        >
          <AgendaView
            onDayPress={[Function]}
            renderEmptyData={[Function]}
            renderEmptyDate={[Function]}
            renderItem={[Function]}
            selected={2018-11-16T07:12:47.116Z}
          />
        </Component>,
      ],
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="ios-cloud-upload"
                size={30}
              />
            </TouchableOpacity>,
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginTop": 15,
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Calendar
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              backgroundColor="green"
              onPress={[Function]}
              style={
                Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="ios-add-circle-outline"
                size={30}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "height": 65,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-cloud-upload"
                size={30}
              />,
              "onPress": [Function],
              "style": Object {
                "height": "100%",
                "margin": 25,
                "padding": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-cloud-upload",
                "size": 30,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Calendar",
              "ellipsizeMode": "tail",
              "style": Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "marginTop": 15,
                "padding": 10,
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Calendar",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "backgroundColor": "green",
              "children": <Icon
                allowFontScaling={false}
                name="ios-add-circle-outline"
                size={30}
              />,
              "onPress": [Function],
              "style": Object {
                "height": "100%",
                "margin": 25,
                "padding": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-add-circle-outline",
                "size": 30,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <AgendaView
            onDayPress={[Function]}
            renderEmptyData={[Function]}
            renderEmptyDate={[Function]}
            renderItem={[Function]}
            selected={2018-11-16T07:12:47.116Z}
          />,
          "style": Object {
            "height": 600,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onDayPress": [Function],
            "renderEmptyData": [Function],
            "renderEmptyDate": [Function],
            "renderItem": [Function],
            "selected": 2018-11-16T07:12:47.116Z,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomWidth": 1,
                "borderColor": "#ddd",
                "flexDirection": "row",
                "height": 65,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="ios-cloud-upload"
                size={30}
              />
            </TouchableOpacity>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginTop": 15,
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Calendar
            </Text>
            <TouchableOpacity
              activeOpacity={0.2}
              backgroundColor="green"
              onPress={[Function]}
              style={
                Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="ios-add-circle-outline"
                size={30}
              />
            </TouchableOpacity>
          </Component>,
          <Component
            style={
              Object {
                "height": 600,
              }
            }
          >
            <AgendaView
              onDayPress={[Function]}
              renderEmptyData={[Function]}
              renderEmptyDate={[Function]}
              renderItem={[Function]}
              selected={2018-11-16T07:12:47.116Z}
            />
          </Component>,
        ],
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Object {
                    "height": "100%",
                    "margin": 25,
                    "padding": 0,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="ios-cloud-upload"
                  size={30}
                />
              </TouchableOpacity>,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "bottom": 0,
                    "flex": 1,
                    "fontSize": 20,
                    "fontWeight": "bold",
                    "marginTop": 15,
                    "padding": 10,
                    "textAlign": "center",
                  }
                }
              >
                Calendar
              </Text>,
              <TouchableOpacity
                activeOpacity={0.2}
                backgroundColor="green"
                onPress={[Function]}
                style={
                  Object {
                    "height": "100%",
                    "margin": 25,
                    "padding": 0,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="ios-add-circle-outline"
                  size={30}
                />
              </TouchableOpacity>,
            ],
            "style": Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 65,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Icon
                  allowFontScaling={false}
                  name="ios-cloud-upload"
                  size={30}
                />,
                "onPress": [Function],
                "style": Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": false,
                  "name": "ios-cloud-upload",
                  "size": 30,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "Calendar",
                "ellipsizeMode": "tail",
                "style": Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "marginTop": 15,
                  "padding": 10,
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "Calendar",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "backgroundColor": "green",
                "children": <Icon
                  allowFontScaling={false}
                  name="ios-add-circle-outline"
                  size={30}
                />,
                "onPress": [Function],
                "style": Object {
                  "height": "100%",
                  "margin": 25,
                  "padding": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": false,
                  "name": "ios-add-circle-outline",
                  "size": 30,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <AgendaView
              onDayPress={[Function]}
              renderEmptyData={[Function]}
              renderEmptyDate={[Function]}
              renderItem={[Function]}
              selected={2018-11-16T07:12:47.116Z}
            />,
            "style": Object {
              "height": 600,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onDayPress": [Function],
              "renderEmptyData": [Function],
              "renderEmptyDate": [Function],
              "renderItem": [Function],
              "selected": 2018-11-16T07:12:47.116Z,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to FriendTab 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FriendTab />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ActivityIndicator
        animating={true}
        color="#000"
        hidesWhenStopped={true}
        size="large"
      />,
      "style": Object {
        "alignItems": "center",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 50,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animating": true,
        "color": "#000",
        "hidesWhenStopped": true,
        "size": "large",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ActivityIndicator
          animating={true}
          color="#000"
          hidesWhenStopped={true}
          size="large"
        />,
        "style": Object {
          "alignItems": "center",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 50,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animating": true,
          "color": "#000",
          "hidesWhenStopped": true,
          "size": "large",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to FriendTab 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SettingsTab />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 50,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              }
            }
          >
            Settings
          </Text>
        </Component>,
        <Component
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
              "paddingTop": 15,
            }
          }
        >
          <ScrollViewMock>
            <Component
              style={
                Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </Component>
            <TouchableOpacity
              activeOpacity={0.2}
              id="logout-button"
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingLeft": 10,
                    "paddingTop": 10,
                  }
                }
              >
                LOGOUT
              </Text>
              <Icon
                allowFontScaling={false}
                name="ios-log-out"
                size={25}
                style={
                  Object {
                    "marginLeft": 10,
                    "marginTop": 5,
                  }
                }
              />
            </TouchableOpacity>
          </ScrollViewMock>
        </Component>,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "paddingTop": 15,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              }
            }
          >
            Settings
          </Text>,
          "style": Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "height": 50,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Settings",
            "ellipsizeMode": "tail",
            "style": Object {
              "bottom": 0,
              "flex": 1,
              "fontSize": 20,
              "fontWeight": "bold",
              "padding": 10,
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Settings",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ScrollViewMock>
            <Component
              style={
                Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </Component>
            <TouchableOpacity
              activeOpacity={0.2}
              id="logout-button"
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingLeft": 10,
                    "paddingTop": 10,
                  }
                }
              >
                LOGOUT
              </Text>
              <Icon
                allowFontScaling={false}
                name="ios-log-out"
                size={25}
                style={
                  Object {
                    "marginLeft": 10,
                    "marginTop": 5,
                  }
                }
              />
            </TouchableOpacity>
          </ScrollViewMock>,
          "style": Object {
            "backgroundColor": "#fff",
            "flex": 1,
            "paddingTop": 15,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>,
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />,
                "style": Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": undefined,
                  "ellipsizeMode": "tail",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": Array [
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      }
                    }
                  >
                    LOGOUT
                  </Text>,
                  <Icon
                    allowFontScaling={false}
                    name="ios-log-out"
                    size={25}
                    style={
                      Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      }
                    }
                  />,
                ],
                "id": "logout-button",
                "onPress": [Function],
                "style": Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": "LOGOUT",
                    "ellipsizeMode": "tail",
                    "style": Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    },
                  },
                  "ref": null,
                  "rendered": "LOGOUT",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "allowFontScaling": false,
                    "name": "ios-log-out",
                    "size": 25,
                    "style": Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [MockFunction],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomWidth": 1,
                "borderColor": "#ddd",
                "flexDirection": "row",
                "height": 50,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Settings
            </Text>
          </Component>,
          <Component
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
                "paddingTop": 15,
              }
            }
          >
            <ScrollViewMock>
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>
            </ScrollViewMock>
          </Component>,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "paddingTop": 15,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Settings
            </Text>,
            "style": Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 50,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Settings",
              "ellipsizeMode": "tail",
              "style": Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Settings",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ScrollViewMock>
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>
            </ScrollViewMock>,
            "style": Object {
              "backgroundColor": "#fff",
              "flex": 1,
              "paddingTop": 15,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Component
                  style={
                    Object {
                      "backgroundColor": "#cccccc",
                      "borderColor": "black",
                      "borderTopWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "height": 35,
                      "paddingLeft": 10,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                  />
                </Component>,
                <TouchableOpacity
                  activeOpacity={0.2}
                  id="logout-button"
                  onPress={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#eeeeee",
                      "borderColor": "black",
                      "borderTopWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "height": 35,
                      "paddingLeft": 10,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      }
                    }
                  >
                    LOGOUT
                  </Text>
                  <Icon
                    allowFontScaling={false}
                    name="ios-log-out"
                    size={25}
                    style={
                      Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      }
                    }
                  />
                </TouchableOpacity>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                  />,
                  "style": Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": undefined,
                    "ellipsizeMode": "tail",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": Array [
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Object {
                          "paddingLeft": 10,
                          "paddingTop": 10,
                        }
                      }
                    >
                      LOGOUT
                    </Text>,
                    <Icon
                      allowFontScaling={false}
                      name="ios-log-out"
                      size={25}
                      style={
                        Object {
                          "marginLeft": 10,
                          "marginTop": 5,
                        }
                      }
                    />,
                  ],
                  "id": "logout-button",
                  "onPress": [Function],
                  "style": Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "accessible": true,
                      "allowFontScaling": true,
                      "children": "LOGOUT",
                      "ellipsizeMode": "tail",
                      "style": Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      },
                    },
                    "ref": null,
                    "rendered": "LOGOUT",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "allowFontScaling": false,
                      "name": "ios-log-out",
                      "size": 25,
                      "style": Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [MockFunction],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to FriendTab 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to SettingsTab and logs out 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SettingsTab />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 50,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              }
            }
          >
            Settings
          </Text>
        </Component>,
        <Component
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
              "paddingTop": 15,
            }
          }
        >
          <ScrollViewMock>
            <Component
              style={
                Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </Component>
            <TouchableOpacity
              activeOpacity={0.2}
              id="logout-button"
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingLeft": 10,
                    "paddingTop": 10,
                  }
                }
              >
                LOGOUT
              </Text>
              <Icon
                allowFontScaling={false}
                name="ios-log-out"
                size={25}
                style={
                  Object {
                    "marginLeft": 10,
                    "marginTop": 5,
                  }
                }
              />
            </TouchableOpacity>
          </ScrollViewMock>
        </Component>,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "paddingTop": 15,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              }
            }
          >
            Settings
          </Text>,
          "style": Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "height": 50,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Settings",
            "ellipsizeMode": "tail",
            "style": Object {
              "bottom": 0,
              "flex": 1,
              "fontSize": 20,
              "fontWeight": "bold",
              "padding": 10,
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Settings",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ScrollViewMock>
            <Component
              style={
                Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </Component>
            <TouchableOpacity
              activeOpacity={0.2}
              id="logout-button"
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "paddingLeft": 10,
                    "paddingTop": 10,
                  }
                }
              >
                LOGOUT
              </Text>
              <Icon
                allowFontScaling={false}
                name="ios-log-out"
                size={25}
                style={
                  Object {
                    "marginLeft": 10,
                    "marginTop": 5,
                  }
                }
              />
            </TouchableOpacity>
          </ScrollViewMock>,
          "style": Object {
            "backgroundColor": "#fff",
            "flex": 1,
            "paddingTop": 15,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>,
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />,
                "style": Object {
                  "backgroundColor": "#cccccc",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": undefined,
                  "ellipsizeMode": "tail",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": Array [
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      }
                    }
                  >
                    LOGOUT
                  </Text>,
                  <Icon
                    allowFontScaling={false}
                    name="ios-log-out"
                    size={25}
                    style={
                      Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      }
                    }
                  />,
                ],
                "id": "logout-button",
                "onPress": [Function],
                "style": Object {
                  "backgroundColor": "#eeeeee",
                  "borderColor": "black",
                  "borderTopWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 35,
                  "paddingLeft": 10,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": "LOGOUT",
                    "ellipsizeMode": "tail",
                    "style": Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    },
                  },
                  "ref": null,
                  "rendered": "LOGOUT",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "allowFontScaling": false,
                    "name": "ios-log-out",
                    "size": 25,
                    "style": Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [MockFunction],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomWidth": 1,
                "borderColor": "#ddd",
                "flexDirection": "row",
                "height": 50,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Settings
            </Text>
          </Component>,
          <Component
            style={
              Object {
                "backgroundColor": "#fff",
                "flex": 1,
                "paddingTop": 15,
              }
            }
          >
            <ScrollViewMock>
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>
            </ScrollViewMock>
          </Component>,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "paddingTop": 15,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "padding": 10,
                  "textAlign": "center",
                }
              }
            >
              Settings
            </Text>,
            "style": Object {
              "backgroundColor": "#fff",
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "height": 50,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Settings",
              "ellipsizeMode": "tail",
              "style": Object {
                "bottom": 0,
                "flex": 1,
                "fontSize": 20,
                "fontWeight": "bold",
                "padding": 10,
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Settings",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ScrollViewMock>
              <Component
                style={
                  Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                />
              </Component>
              <TouchableOpacity
                activeOpacity={0.2}
                id="logout-button"
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  }
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "paddingLeft": 10,
                      "paddingTop": 10,
                    }
                  }
                >
                  LOGOUT
                </Text>
                <Icon
                  allowFontScaling={false}
                  name="ios-log-out"
                  size={25}
                  style={
                    Object {
                      "marginLeft": 10,
                      "marginTop": 5,
                    }
                  }
                />
              </TouchableOpacity>
            </ScrollViewMock>,
            "style": Object {
              "backgroundColor": "#fff",
              "flex": 1,
              "paddingTop": 15,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Component
                  style={
                    Object {
                      "backgroundColor": "#cccccc",
                      "borderColor": "black",
                      "borderTopWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "height": 35,
                      "paddingLeft": 10,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                  />
                </Component>,
                <TouchableOpacity
                  activeOpacity={0.2}
                  id="logout-button"
                  onPress={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#eeeeee",
                      "borderColor": "black",
                      "borderTopWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "height": 35,
                      "paddingLeft": 10,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      }
                    }
                  >
                    LOGOUT
                  </Text>
                  <Icon
                    allowFontScaling={false}
                    name="ios-log-out"
                    size={25}
                    style={
                      Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      }
                    }
                  />
                </TouchableOpacity>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                  />,
                  "style": Object {
                    "backgroundColor": "#cccccc",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accessible": true,
                    "allowFontScaling": true,
                    "children": undefined,
                    "ellipsizeMode": "tail",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": Array [
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Object {
                          "paddingLeft": 10,
                          "paddingTop": 10,
                        }
                      }
                    >
                      LOGOUT
                    </Text>,
                    <Icon
                      allowFontScaling={false}
                      name="ios-log-out"
                      size={25}
                      style={
                        Object {
                          "marginLeft": 10,
                          "marginTop": 5,
                        }
                      }
                    />,
                  ],
                  "id": "logout-button",
                  "onPress": [Function],
                  "style": Object {
                    "backgroundColor": "#eeeeee",
                    "borderColor": "black",
                    "borderTopWidth": 1,
                    "flex": 1,
                    "flexDirection": "row",
                    "height": 35,
                    "paddingLeft": 10,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "accessible": true,
                      "allowFontScaling": true,
                      "children": "LOGOUT",
                      "ellipsizeMode": "tail",
                      "style": Object {
                        "paddingLeft": 10,
                        "paddingTop": 10,
                      },
                    },
                    "ref": null,
                    "rendered": "LOGOUT",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "allowFontScaling": false,
                      "name": "ios-log-out",
                      "size": 25,
                      "style": Object {
                        "marginLeft": 10,
                        "marginTop": 5,
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [MockFunction],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to SettingsTab and logs out 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot navigates to friendtab 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FriendTab />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ActivityIndicator
        animating={true}
        color="#000"
        hidesWhenStopped={true}
        size="large"
      />,
      "style": Object {
        "alignItems": "center",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 50,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animating": true,
        "color": "#000",
        "hidesWhenStopped": true,
        "size": "large",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ActivityIndicator
          animating={true}
          color="#000"
          hidesWhenStopped={true}
          size="large"
        />,
        "style": Object {
          "alignItems": "center",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 50,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animating": true,
          "color": "#000",
          "hidesWhenStopped": true,
          "size": "large",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot renders the login screen 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          LOGIN
        </Text>
        <TouchableOpacity
          activeOpacity={0.2}
          id="login-button"
          onPress={[Function]}
        >
          <Icon
            allowFontScaling={false}
            name="ios-log-in"
            size={50}
          />
        </TouchableOpacity>
      </Component>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>,
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>,
        ],
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "LOGIN",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />,
            "id": "login-button",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": false,
              "name": "ios-log-in",
              "size": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            LOGIN
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            id="login-button"
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              name="ios-log-in"
              size={50}
            />
          </TouchableOpacity>
        </Component>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              LOGIN
            </Text>,
            <TouchableOpacity
              activeOpacity={0.2}
              id="login-button"
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />
            </TouchableOpacity>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "LOGIN",
              "ellipsizeMode": "tail",
            },
            "ref": null,
            "rendered": "LOGIN",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Icon
                allowFontScaling={false}
                name="ios-log-in"
                size={50}
              />,
              "id": "login-button",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "name": "ios-log-in",
                "size": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
